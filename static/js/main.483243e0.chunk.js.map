{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","state","quotes","quote","source","quoteContent","quoteSource","generateQuoteHandler","randomQuote","Math","floor","random","_this","length","setState","tweetQuoteHandler","tweetUrl","encodeURIComponent","window","open","this","react_default","a","createElement","id","className","href","onClick","Component","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"yNA0HeA,oNAtHbC,MAAQ,CACNC,OAAQ,CACN,CACAC,MAAM,wEACNC,OAAO,yBAEP,CACCD,MAAM,2HACNC,OAAO,+BAER,CACED,MAAM,4CACNC,OAAO,iCAET,CACED,MAAM,qFACNC,OAAO,uCAET,CACED,MAAM,+BACNC,OAAO,sBAET,CACED,MAAM,0DACNC,OAAO,uBAET,CACED,MAAM,wCACNC,OAAO,uBAET,CACED,MAAM,oFACNC,OAAO,0BAET,CACED,MAAM,0CACNC,OAAO,yBAET,CACED,MAAM,gFACNC,OAAO,oBAET,CACED,MAAM,oDACNC,OAAO,qBAET,CACED,MAAM,4DACNC,OAAO,wBAET,CACED,MAAM,6EACNC,OAAO,sBAET,CACED,MAAM,4EACNC,OAAO,uBAET,CACED,MAAM,qFACNC,OAAO,wBAET,CACED,MAAM,+DACNC,OAAO,uBAET,CACED,MAAM,wFACNC,OAAO,yBAET,CACED,MAAM,sDACNC,OAAO,wBAET,CACED,MAAM,6EACNC,OAAO,gCAETC,aAAc,KACdC,YAAa,QAGjBC,qBAAuB,WACrB,IAAIC,EAAcC,KAAKC,MAAMD,KAAKE,SAAWC,EAAKX,MAAMC,OAAOW,QAC3DR,EAAeO,EAAKX,MAAMC,OAAOM,GAAaL,MAC9CG,EAAcM,EAAKX,MAAMC,OAAOM,GAAaJ,OAEjDQ,EAAKE,SAAS,CAACT,aAAcA,EAC7BC,YAAaA,OAGfS,kBAAoB,WAClB,IAAIC,EAAW,yCAA2CC,mBAAmBL,EAAKX,MAAMI,cAAgBY,mBAAmBL,EAAKX,MAAMK,aACrIY,OAAOC,KAAKH,uFAIbI,KAAKb,wDAIL,OACEc,EAAAC,EAAAC,cAAA,OAAKC,GAAG,YAAYC,UAAU,OAC3BJ,EAAAC,EAAAC,cAAA,kBACGF,EAAAC,EAAAC,cAAA,MAAIC,GAAG,QACJJ,KAAKnB,MAAMI,cAEdgB,EAAAC,EAAAC,cAAA,KAAGC,GAAG,UACHJ,KAAKnB,MAAMK,cAGhBe,EAAAC,EAAAC,cAAA,KAAGC,GAAG,cAAeE,KAAK,2BAA2BC,QAASP,KAAKL,mBAAmBM,EAAAC,EAAAC,cAAA,KAAGE,UAAU,kBAAnG,cACAJ,EAAAC,EAAAC,cAAA,UAAQC,GAAG,YAAYG,QAASP,KAAKb,sBAArC,qBAjHQqB,cCSEC,QACW,cAA7BX,OAAOY,SAASC,UAEe,UAA7Bb,OAAOY,SAASC,UAEhBb,OAAOY,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOb,EAAAC,EAAAC,cAACY,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.483243e0.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    quotes: [\n      {\n      quote:'\"There is some good in this world, and it’s worth fighting for.\"',\n      source:\"– J.R.R. Tolkien\"\n      },\n      {\n       quote:'\"Twenty years from now you will be more disappointed by the things that you didn’t do than by the ones you did do.\"',\n       source:\"– H. Jackson Brown Jr.\"\n      },\n      {\n        quote:'\"Well-behaved women seldom make history.\"',\n        source:\"– Laurel Thatcher Ulrich\"\n      },\n      {\n        quote:'\"It is better to be hated for what you are than to be loved for what you are not.\"',\n        source:\"– André Gide, Autumn Leaves\"\n      },\n      {\n        quote:'\"Who, being loved, is poor?\"',\n        source:\"– Oscar Wilde\"\n      },\n      {\n        quote:'\"Every human life is worth the same, and worth saving.\"',\n        source:\"– J.K. Rowling\"\n      },\n      {\n        quote:'\"Get busy living, or get busy dying.\"',\n        source:\"– Stephen King\"\n      },\n      {\n        quote:'\"The goal isn’t to live forever, the goal is to create something that will.\"',\n        source:\"– Chuck Palahniuk\"\n      },\n      {\n        quote:'\"Travel far enough, you meet yourself.\"',\n        source:\"– David Mitchell\"\n      },\n      {\n        quote:'\"None of us really changes over time. We only become more fully what we are.\"',\n        source:\"– Anne Rice\"\n      },\n      {\n        quote:'\"Most people are nice when you finally see them.\"',\n        source:\"– Harper Lee\"\n      },\n      {\n        quote:'\"Anything worth dying for is certainly worth living for.\"',\n        source:\"– Joseph Heller\"\n      },\n      {\n        quote:'\"All endings are also beginnings. We just don’t know it at the time.\"',\n        source:\"– Mitch Albom\"\n      },\n      {\n        quote:'\"When someone leaves, it’s because someone else is about to arrive.\"',\n        source:\"– Paulo Coelho\"\n      },\n      {\n        quote:'\"It’s no use going back to yesterday, because I was a different person then.\"',\n        source:\"– Lewis Carroll\"\n      },\n      {\n        quote:'\"The only limits for tomorrow are the doubts we have today.\"',\n        source:\"–Pittacus Lore\"\n      },\n      {\n        quote:'\"If we wait until we’re ready, we’ll be waiting for the rest of our lives.\"',\n        source:\"– Lemony Snicket\"\n      },\n      {\n        quote:'\"Fear doesn’t shut you down; it wakes you up.\"',\n        source:\"– Veronica Roth\"\n      },\n      {\n        quote:'\"When you are imagining, you might as well imagine something worth while.\"',\n        source:\"– Lucy Maud Montgomery\"\n      }],\n      quoteContent: null,\n      quoteSource: null\n  }\n\n  generateQuoteHandler = () => {\n    let randomQuote = Math.floor(Math.random() * this.state.quotes.length);\n    let quoteContent = this.state.quotes[randomQuote].quote;\n    let quoteSource = this.state.quotes[randomQuote].source;\n\n    this.setState({quoteContent: quoteContent,\n    quoteSource: quoteSource});      \n  }\n    \n  tweetQuoteHandler = () => {\n    let tweetUrl = 'https://twitter.com/intent/tweet?text=' + encodeURIComponent(this.state.quoteContent) + encodeURIComponent(this.state.quoteSource);\n     window.open(tweetUrl);\n  }\n\n  componentDidMount() {\n    this.generateQuoteHandler();\n  }\n\n  render() {       \n    return (\n      <div id=\"quote-box\" className=\"App\">\n         <blockquote>\n            <h2 id='text'>\n              {this.state.quoteContent}\n            </h2>\n            <p id='author'>\n              {this.state.quoteSource}\n            </p>\n          </blockquote>  \n          <a id=\"tweet-quote\"  href=\"twitter.com/intent/tweet\" onClick={this.tweetQuoteHandler}><i className=\"fa fa-twitter\"></i>Tweet This</a>\n          <button id=\"new-quote\" onClick={this.generateQuoteHandler} >New Quote</button>  \n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}